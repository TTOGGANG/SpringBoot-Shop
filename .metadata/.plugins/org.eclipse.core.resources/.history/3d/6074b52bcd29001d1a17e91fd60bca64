#애플리케이션 포트설정
server.port = 8090

##MySql연결설정
#spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/shop?serverTimezone=UTC
#spring.datasource.username=root
#spring.datasource.password=12345

#h2
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.url=jdbc:h2:tcp://localhost/~/test
spring.datasource.username=root
spring.datasource.password=12345


#실행되는 쿼리 콜솔 출력
spring.jpa.properties.hibernate.show_sql=true

#콘솔창에 출력되는 쿼리를 가독성이 좋게 포맷팅
spring.jpa.properties.hibernate.format_sql=true

#쿼리에 물음표로 출력되는 바인드 파라미터 출력
logging.level.org.hibernate.type.descriptor.sql=trace

#spring jpa.hibernate.ddl-auto=create
#설정이 validate이면 애플리케이션 실행시점에 테이블을 삭제한 후 재생성하지 않으며 엔티티와 테이블이 매핑이 정상적으로 되어 있는지만 확인한다.
# 엔티티를 추가가 필요할 경우 create와 validate를 번갈아 가면서 사용하면 편리하다.
#application.properties의 설정이 validate이면 테스트 코드 실행 시 테이블이 자동으로 생성되지 않으므로 테스트 환경에선 create로 설정한다.
spring jpa.hibernate.ddl-auto=validate
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

#Thymeleaf cache
spring.thymleaf.cache=false

#파일 한 개당 최대 사이즈
spring.servlet.multipart.maxFileSize=20MB
#요청당 최대 파일 크기
spring.servlet.multipart.maxRequestSize=100MB
#상품 이미지 업로드 경로
itemImgLocation=C:/shop/item
#리소스 업로드 경로
uploadPath=file:///C:/shop/